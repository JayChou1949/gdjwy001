<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:lang="http://www.springframework.org/schema/lang"
	    xsi:schemaLocation="
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	   default-autowire="byName">

	<context:property-placeholder location="classpath:cmpProp-mq-producer.properties" ignore-unresolvable="true"/>

	<!-- 定义producer的参数 -->
	<bean id="producerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${producer.servers}" />
				<entry key="key.serializer" value="${producer.key.serializer}" />
				<entry key="value.serializer" value="${producer.value.serializer}" />
				<entry key="retries" value="${producer.retries}" />
				<entry key="batch.size" value="${producer.batch.size}" />
				<entry key="linger.ms" value="${producer.linger.ms}" />
				<entry key="acks" value="${producer.acks}" />
				<entry key="compression.type" value="${producer.compression.type}" />
				<entry key="max.request.size" value="${producer.max.request.size}" />
				<entry key="partitioner.class" value="${producer.partitioner.class}" />
				<entry key="request.timeout.ms" value="${producer.request.timeout.ms}" />
				<entry key="client.id" value="${producer.client.id}" />
				<entry key="security.protocol" value="${producer.security.protocol}"/>
				<entry key="sasl.mechanism" value="${producer.sasl.mechanism}"/>
				<entry key="sasl.jaas.config" value="${producer.sasl.loginModel} required  username='${producer.account}' password='${producer.password}' ;"/>
			</map>
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate需要使用的producerfactory bean -->
	<bean id="producerFactory"
		  class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
		<constructor-arg>
			<ref bean="producerProperties" />
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
	<bean id="KafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg ref="producerFactory" />
		<constructor-arg name="autoFlush" value="true" />
		<property name="defaultTopic" value="defaultTopic" />
		<property name="producerListener" ref="producerListener"/>
	</bean>

	<!--发送消息的监听器，监测发送状态-->
	<bean id="producerListener" class="com.dragonsoft.mq.client.spring.listener.ProducerListener" />


</beans>
