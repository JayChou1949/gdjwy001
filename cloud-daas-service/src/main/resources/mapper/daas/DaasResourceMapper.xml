<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hirisun.cloud.daas.mapper.DaasResourceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hirisun.cloud.daas.bean.DaasResource">
        <id column="ID" property="id" />
        <result column="NAME" property="name" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="MODIFIED_TIME" property="modifiedTime" />
        <result column="STATUS" property="status" />
        <result column="CREATOR" property="creator" />
        <result column="VERSION" property="version" />
        <result column="BUSINESS_TYPE" property="businessType" />
        <result column="SERVICE_TYPE" property="serviceType" />
        <result column="PROVIDER" property="provider" />
        <result column="LABEL" property="label" />
        <result column="REMARK" property="remark" />
        <result column="FILE_ID" property="fileId" />
        <result column="APIG_CLUSTER_ID" property="apigClusterId"/>
        <result column="APIG_GUID" property="apigGuid"/>
        <result column="UPDATE_AT" property="updateAt" />
        <result column="APIPRODUCT_ID" property="apiproductId" />
        <result column="DOMAIN_ID" property="domainId" />
        <result column="PROJECT_ID" property="projectId" />
        <result column="CATA_LOG" property="cataLog" />
        <result column="CATEGORY" property="category" />
        <result column="UPDATE_CYCLE" property="updateCycle" />
        <result column="DATA_RESOURCE" property="dataResource" />
        <result column="DATA_FROM" property="dataFrom" />
        <result column="FROM_SYSTEM" property="fromSystem" />
        <result column="FROM_NET" property="fromNet" />
        <result column="COLLECTION_UNIT" property="collectionUnit" />
        <result column="EXPLANATION" property="explanation" />
        <result column="SERVICE_MODE" property="serviceMode" />
        <result column="AREA_NAME" property="areaName" />
        <result column="POLICE_CATEGORY" property="policeCategory" />
        <result column="SUFFIX" property="suffix" />
    </resultMap>

    <select id="getPage" resultMap="BaseResultMap">
        SELECT B.* FROM TB_BIGDATA B
        <where>
            B.CATA_LOG = 7 AND B.STATUS = 2
            <if test="name != null and name != ''">
                AND B.NAME LIKE CONCAT(CONCAT('%',#{name}),'%')
            </if>
            <if test="dataFrom != null and dataFrom != ''">
                AND B.DATA_FROM LIKE CONCAT(CONCAT('%',#{dataFrom}),'%')
            </if>
            <if test="collectionUnit != null and collectionUnit != ''">
                AND B.COLLECTION_UNIT LIKE CONCAT(CONCAT('%',#{collectionUnit}),'%')
            </if>
            <if test="category != null and category != ''">
                AND B.CATEGORY like CONCAT(#{category}, '%')
            </if>
        </where>
        ORDER BY B.CREATE_TIME DESC
    </select>

    <select id="serviceStatisticsByIssue" resultType="com.hirisun.cloud.model.daas.vo.ServiceIssueVo">
        SELECT ROWNUM AS "ID",T.* FROM (
        SELECT
            "NAME",
            AREA_NAME,
            POLICE_CATEGORY,
            TO_CHAR (CREATE_TIME,'yyyy-MM-dd HH:mm:ss') AS CREATE_TIME
        FROM
            TB_BIGDATA
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            ${ew.sqlSegment}
        </trim>
        ) T
    </select>

    <select id="serviceStatisticsBySubscribe" resultType="com.hirisun.cloud.model.daas.vo.ServiceSubscribeVo">
        SELECT ROWNUM AS "ID",T.* FROM (
        SELECT
            B.NAME AS serviceName,
            B.AREA_NAME AS serviceAreaName,
            B.POLICE_CATEGORY AS servicePoliceCategory,
            SUBSTR(I."ALIAS", 0, INSTR(I."ALIAS",'（')-1) AS appName,
            I.AREA_NAME AS appAreaName,
            I.POLICE_CATEGORY AS appPoliceCategory,
            TO_CHAR (I.CREATED_AT,'yyyy-MM-dd HH:mm:ss') AS CREATE_TIME
        FROM
            TB_SERVICE_INSTANCE I
            LEFT JOIN TB_BIGDATA  B ON I.SERVICE_GUID = B.APIG_GUID
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
          ${ew.sqlSegment}
        </trim>
        ) T
    </select>
    <select id="appStatisticsByRequest" resultType="com.hirisun.cloud.model.daas.vo.ServiceRequestVo">
        SELECT ROWNUM AS "ID",T.* FROM (
            SELECT
            A.CURRENT_TIME AS currentTime,
            B.NAME AS serviceName,
            B.AREA_NAME AS serviceAreaName,
            B.POLICE_CATEGORY AS servicePoliceCategory,
            SUBSTR(I."ALIAS", 0, INSTR(I."ALIAS",'（')-1) AS appName,
            I.AREA_NAME AS appAreaName,
            I.POLICE_CATEGORY AS appPoliceCategory,
            A.REQ_COUNT AS totalReqCount
            FROM
            TB_APP_STATISTICS A
            LEFT JOIN TB_BIGDATA B ON A.PRODUCT_FAMILY_ID = B.APIPRODUCT_ID
            LEFT JOIN TB_SERVICE_INSTANCE I ON A.ACTUAL_ID = I.ACTUAL_ID AND I.SERVICE_GUID=B.APIG_GUID
            <trim prefix="WHERE" prefixOverrides="AND |OR ">
                ${ew.sqlSegment}
            </trim>
        ) T
       </select>
    <select id="serviceStatisticsByRequest" resultType="com.hirisun.cloud.model.daas.vo.ServiceRequestVo">
        SELECT ROWNUM AS "ID",T.* FROM (
            SELECT
            A.CURRENT_TIME AS currentTime,
            B.NAME AS serviceName,
            B.AREA_NAME AS serviceAreaName,
            B.POLICE_CATEGORY AS servicePoliceCategory,
            A.REQ_COUNT AS totalReqCount
            FROM
            TB_SERVICE_STATISTICS A
            LEFT JOIN TB_SERVICE_INSTANCE I ON A.SERVICE_GUID=I.SERVICE_GUID
            LEFT JOIN TB_BIGDATA B ON I.SERVICE_GUID = B.APIG_GUID
            <trim prefix="WHERE" prefixOverrides="AND |OR ">
                ${ew.sqlSegment}
            </trim>
        ) T
       </select>
    <select id="serviceStatisticsByQuality" resultType="com.hirisun.cloud.model.daas.vo.ServiceQualityVo">
        SELECT ROWNUM AS "ID",T.* FROM (
        SELECT
            B.NAME AS serviceName,
            B.AREA_NAME AS serviceAreaName,
            B.POLICE_CATEGORY AS servicePoliceCategory,
            SUM(A .REQ_COUNT) AS reqCount,
            SUM((A .REQ_COUNT_4XX + A .REQ_COUNT_5XX)) AS abnormal,
            SUM(A .AVG_LATENCY) AS avgLatency,
            SUM(A .AVG_BACKEND_LATENCY) AS avgBackendLatency,
            COUNT(A.ID) AS num
        FROM
            TB_APP_STATISTICS A
        LEFT JOIN TB_BIGDATA B ON A .PRODUCT_FAMILY_ID = B.APIPRODUCT_ID
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            ${ew.sqlSegment}
        </trim>
        ) T
    </select>

    <select id="saasLvThreeExportVo" resultType="com.hirisun.cloud.model.daas.vo.BigDataOfSaasVO">
        select DISTINCT p.NAME serviceName,d.NAME subType,b.PROVIDER provider from TB_PAAS p
        LEFT JOIN SYS_DICT d ON p.SUB_TYPE = d.ID
        LEFT JOIN  TB_BIGDATA b ON p.NAME = b.NAME
        where
        p.NAME in
        <foreach collection="names" index="index" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <select id="yqServiceDetail" resultType="com.hirisun.cloud.model.daas.vo.YqServiceDetailVo">
        SELECT temp.serviceName,temp.serviceTime,temp.appName,temp.orderTime,temp.apiId,temp.actualId FROM
        (SELECT tt.*,ROWNUM num FROM (SELECT B.NAME serviceName,B.CREATE_TIME serviceTime,I.APP_NAME appName,I.CREATED_AT orderTime,B.APIPRODUCT_ID apiId,I.ACTUAL_ID actualId FROM TB_BIGDATA B INNER JOIN TB_SERVICE_INSTANCE I
        ON I.SERVICE_GUID=B.APIG_GUID WHERE B.CATEGORY LIKE '%疫情专项%' AND I.status='running'
        <if test="serviceName != null and serviceName != ''">
            AND LOWER( B.name) LIKE LOWER( #{serviceName} )
        </if>
        <if test="appName != null and appName != ''">
            AND LOWER(I.APP_NAME) LIKE LOWER(#{appName})
        </if>
        ORDER BY serviceTime DESC,orderTime DESC) tt
        WHERE ROWNUM &lt;=#{after}) temp WHERE temp.num>#{before}
    </select>

    <select id="countAndAvg" resultType="com.hirisun.cloud.model.daas.vo.YqServiceDetailVo">
        SELECT SUM(REQ_COUNT) reqCount,ROUND(AVG(AVG_LATENCY), 2) avgLatency FROM TB_APP_STATISTICS WHERE ACTUAL_ID = #{actualId} AND PRODUCT_FAMILY_ID = #{apiId}
    </select>

    <select id="areaOrder" resultType="com.hirisun.cloud.model.daas.vo.YqStatisticsVo">
        SELECT AREA_NAME name,COUNT(SERVICE_GUID) count FROM TB_SERVICE_INSTANCE WHERE STATUS ='running' AND APP_NAME!= '广东公安疫情防控平台' AND AREA_NAME!='省厅' AND AREA_NAME IS NOT NULL AND SERVICE_GUID IN (SELECT APIG_GUID FROM TB_BIGDATA
        WHERE CATEGORY LIKE #{label})  GROUP BY AREA_NAME
    </select>

    <select id="policeOrder" resultType="com.hirisun.cloud.model.daas.vo.YqStatisticsVo">
        SELECT POLICE_CATEGORY name,COUNT(SERVICE_GUID) count FROM TB_SERVICE_INSTANCE WHERE STATUS ='running' AND APP_NAME!= '广东公安疫情防控平台' AND AREA_NAME='省厅' AND SERVICE_GUID IN (SELECT APIG_GUID FROM TB_BIGDATA
        WHERE CATEGORY LIKE #{label,}) AND POLICE_CATEGORY IS NOT NULL GROUP BY POLICE_CATEGORY
    </select>

    <select id="appOrder" resultType="com.hirisun.cloud.model.daas.vo.YqStatisticsVo">
        SELECT temp.name,temp.count FROM (SELECT B.NAME,COUNT(B.NAME) count FROM TB_BIGDATA B INNER JOIN TB_SERVICE_INSTANCE I ON I.SERVICE_GUID=B.APIG_GUID
        WHERE B.CATEGORY LIKE #{label} GROUP BY B.NAME ORDER BY count DESC) temp WHERE ROWNUM &lt;= 10
    </select>

    <select id="serviceByOrder" resultType="com.hirisun.cloud.model.daas.vo.YqStatisticsVo">
        SELECT temp.name,temp.count FROM (SELECT I.APP_NAME name,COUNT(I.APP_NAME) count FROM TB_BIGDATA B INNER JOIN TB_SERVICE_INSTANCE I ON I.SERVICE_GUID=B.APIG_GUID
        WHERE B.CATEGORY LIKE #{label} AND I.APP_NAME!= '广东公安疫情防控平台' GROUP BY I.APP_NAME ORDER BY count DESC) temp WHERE ROWNUM &lt;= 10
    </select>
    <select id="yqdy" resultType="int">
        SELECT COUNT(I.SERVICE_GUID) FROM TB_BIGDATA B INNER JOIN TB_SERVICE_INSTANCE I ON I.SERVICE_GUID=B.APIG_GUID WHERE B.CATEGORY LIKE '%疫情专项%' AND I.status='running'
        <if test="serviceName != null and serviceName != ''">
            AND LOWER( B.name) LIKE LOWER( #{serviceName} )
        </if>
        <if test="appName != null and appName != ''">
            AND LOWER(I.APP_NAME) LIKE LOWER(#{appName})
        </if>
    </select>
</mapper>
